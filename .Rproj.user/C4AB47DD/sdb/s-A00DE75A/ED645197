{
    "collab_server" : "",
    "contents" : "#' @title create_profiles\n#' @description Function to create profiles for players.\n#'\n#' @param df Dataframe to create profiles from.\n#' @param window_size Size of rolling window. Defaults to 3.\n#'\n#' @return Returns nested list of lists containing profile and projection.\n#' @export\ncreate_profiles <- function(df, window_size = 3) {\n\n    df %<>%\n        dplyr::arrange(date) %>%\n        dplyr::mutate(row_index = 1:nrow(.))\n\n    df_long <- df %>%\n        dplyr::select(-date, -week, -dk_pts) %>%\n        tidyr::gather(stat, value, c(cmp:fmbl, snaps, snap_pct))\n\n    if (max(df$row_index) <= window_size) {\n        return(NULL)\n    } else {\n        starts <- 1:(max(df$row_index) - window_size)\n        ends <- starts + window_size - 1\n        projections <- ends + 1\n\n        profs <- purrr::map2(\n            .x = starts,\n            .y = ends,\n            .f = ~ df_long %>%\n                dplyr::filter(row_index %in% .x:.y) %>%\n                dplyr::arrange(stat, row_index)\n        )\n\n        projections <- df$dk_pts[projections]\n\n        profiles <- purrr::map2(\n            .x = profs,\n            .y = projections,\n            .f = ~list(profile = .x, projection = .y)\n        )\n        return(profiles)\n    }\n}\n",
    "created" : 1473977761509.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "304162095",
    "id" : "ED645197",
    "lastKnownWriteTime" : 1473981402,
    "last_content_update" : 1473981402135,
    "path" : "~/Documents/dfstoolkit/R/create_profiles.R",
    "project_path" : "R/create_profiles.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}