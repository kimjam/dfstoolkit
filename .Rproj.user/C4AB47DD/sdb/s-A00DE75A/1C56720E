{
    "collab_server" : "",
    "contents" : "#' @title dfs_query\n#' @description Function to get data from dfs db.\n#'\n#' @param db_path Path to sqlite database. Defaults to DFS_DB variable in .Renviron.\n#' @param query query to send to database\n#'\n#' @return results of query in a dataframe\n#' @export\nnfl_query <- function(\n    db_path = Sys.getenv('DFS_DB'),\n    query\n) {\n    con <- DBI::dbConnect(drv = RSQLite::SQLite(),\n                          dbname = db_path)\n\n    results <- DBI::dbGetQuery(con, query)\n\n    return(results)\n}\n\n\n#' @title dfs_insert\n#' @description Function to insert data into dfs db.\n#'\n#' @param db_path Path to sqlite database. Defaults to DFS_DB variable in .Renviron.\n#' @param table Name of table to write data to.\n#' @param df The dataframe to write.\n#' @param ... additional parameters for DBI::dbWriteTAble\n#'\n#' @export\nnfl_insert <- function(\n    db_path = Sys.getenv('DFS_DB'),\n    table,\n    df,\n    ...\n) {\n    con <- DBI::dbConnect(drv = RSQLite::SQLite(),\n                          dbname = db_path)\n\n    DBI::dbWriteTable(conn = con,\n                      name = table,\n                      value = df,\n                      ...)\n}\n\n#' @title sqlite2posix\n#' @description Utility function to change integer to date.\n#'\n#' @param x numeric value to change to POSIXct\n#'\n#' @return Returns dataframe with date column fixed.\n#' @export\nsqlite2posix <- function(x) {\n    as.POSIXct(x, origin = '1970-01-01')\n}\n",
    "created" : 1472160519482.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "864460986",
    "id" : "1C56720E",
    "lastKnownWriteTime" : 1492810585,
    "last_content_update" : 1492810585028,
    "path" : "~/Documents/dfstoolkit/R/utils.R",
    "project_path" : "R/utils.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}